name: Linting, Testing, Building
# Executes in every branch

on: [push]

jobs:
  listing_testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      # install pylint and pytest separately as they shouldn't be in prod package
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install pytest
        pip install -r requirements.txt
    - name: Analysing the code with pylint
      run: |
        python -m pylint tests app
    - name: Unittesting code
      run: |
        python -m pytest tests
  
  # only build and push image if main branch
  push_to_registry_and_deploy:
      name: Push Docker image to Docker Hub
      if: success() && github.ref_name == 'main'
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
  
        - name: Set up Google Cloud SDK
          uses: google-github-actions/setup-gcloud@master
          with:
            project_id: programmierprojekt-2023
            service_account_key: ${{ secrets.GCP_SA_KEY }}
            export_default_credentials: true
  
        - name: Configure docker for GCP
          run: gcloud auth configure-docker
  
        - name: Build and push Docker image
          uses: docker/build-push-action@v2
          with:
            context: .
            push: true
            tags: gcr.io/programmierprojekt-2023/facehugger:latest
            build-args: |
              HTTP_PORT=5000
  
        - name: Deploy to Cloud Run
          uses: google-github-actions/deploy-cloudrun@main
          with:
            image: gcr.io/programmierprojekt-2023/facehugger:latest
            service: go-rest-api
            region: europe-west3
            platform: managed
            allow-unauthenticated: true
            env_vars: |
                FOO=bar
                ZIP=zap
      
