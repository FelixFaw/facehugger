name: Linting, Testing, Building
# Executes in every branch

on: [push]

jobs:
  listing_testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      # install pylint and pytest separately as they shouldn't be in prod package
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install pytest
        pip install -r requirements.txt
    - name: Analysing the code with pylint
      run: |
        python -m pylint tests app
    - name: Unittesting code
      run: |
        python -m pytest tests
  
  # only build and push image if main branch
  push_to_registry:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      if: success() && github.ref_name == 'main'
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3
        
        - name: Log in to Docker Hub
          uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
          with:
            images: wu3ty/facehugger
        
        - name: Build and push Docker image
          uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
    
