name: Linting, Testing, Building
# Executes in every branch

on: [push]

env:
  PROJECT_ID: programmierprojekt-2023 # TODO: update Google Cloud project id
  SERVICE: go-rest-api # TODO: update Cloud Run service name
  REGION: europe-west3 # TODO: update Cloud Run service region
  GAR_LOCATION: europe-west3
  APP: facehugger
  RELEASE_NAME: dev
  
jobs:

  listing_testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      # install pylint and pytest separately as they shouldn't be in prod package
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install pytest
        pip install -r requirements.txt
    - name: Analysing the code with pylint
      run: |
        python -m pylint tests app
    - name: Unittesting code
      run: |
        python -m pytest tests
  
  # only build and push image if main branch
  push_to_registry_and_deploy:
      permissions:
           contents: 'read'
           id-token: 'write'  
      name: Push Docker image to Docker Hub
      # TODO: wieder rein
      # if: success() && github.ref_name == 'main'
      runs-on: ubuntu-latest
      steps:
           - name: 'Checkout'
             uses: 'actions/checkout@v3'   
      
           - name: 'Google auth'
             id: 'auth'
             uses: 'google-github-actions/auth@v1'
             with:
               workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
               service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

           - name: 'Set up Cloud SDK'
             uses: 'google-github-actions/setup-gcloud@v1'
      
           - name: 'Docker auth'
             run: |-
               gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev               
           - name: 'Build and push container'   
             uses: docker/build-push-action@v2
             with:
              push: true
              tags: |
                 europe-west3-docker.pkg.dev/programmierprojekt-2023/pp-2023-registry/facehugger:${{ steps.get-tag.outputs.short_ref }}
                 europe-west3-docker.pkg.dev/programmierprojekt-2023/pp-2023-registry/facehugger:latest
                 
           #- name: 'Build and push container'
           #  run: |-
           #    docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}" ./app
           #    docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}"

           - name: 'Create release name'
             run: |-
               echo "RELEASE_NAME=${{ env.APP }}-${GITHUB_SHA::7}-${GITHUB_RUN_NUMBER}" >> ${GITHUB_ENV}
               
           - name: 'Create Cloud Deploy release'
             uses: 'google-github-actions/create-cloud-deploy-release@v0'
             with:
               delivery_pipeline: '${{ env.APP }}'
               name: '${{ env.RELEASE_NAME }}'
               region: '${{ env.REGION }}'
               description: '${{ env.GITHUB_COMMIT_MSG }}'
               skaffold_file: 'config/skaffold.yaml'
               images: 'app=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP }}/${{ env.APP }}:${{ github.sha }}'               
